{"version":3,"sources":["img/github.svg","components/Navigation.js","components/GameCard.js","img/death_roll_app_icon_512.png","components/Home.js","img/death_roll_banner.jpg","components/MarkdownContentPage.js","img/logo.png","img/bitcoin.svg","img/ethereum.svg","img/qr_bitcoin.png","img/qr_ethereum.png","components/Footer.js","content/DeathRollSimulator/DeathRollSimulator.md","App.js","reportWebVitals.js","index.js"],"names":["Navigation","useState","isOpen","setIsOpen","Container","className","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","target","rel","src","githubIcon","alt","GameCard","props","Col","md","Card","CardBody","CardTitle","tag","title","CardSubtitle","releaseDate","width","image","CardText","description","Button","color","download","height","Home","Row","deathRollLogo","MarkdownContentPage","markdown","setMarkdown","useEffect","fetch","markdownFile","then","response","text","data","deathRollBanner","children","Footer","modal","setModal","ethQrCode","qrImage","setQrImage","selectedCoin","setModalCoin","modalPublicKey","setModalPublicKey","toggleModal","Modal","toggle","ModalHeader","ModalBody","ModalFooter","xs","size","offset","logo","btcQrCode","btcIcon","ethIcon","Date","getFullYear","App","path","Helmet","name","content","deathRollMarkdown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c098981.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.0a011132.svg\";","import './Navigation.css'\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarToggler,\r\n  NavbarText,\r\n  Container\r\n} from 'reactstrap';\r\nimport githubIcon from '../img/github.svg';\r\n\r\nconst Navigation = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Container className=\"Navigation\">\r\n      <Navbar className=\"Navbar\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\">Jackfruit Games</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/DeathRollSimulator\">WoW Death Roll Simulator</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavbarText>\r\n            <a href=\"https://github.com/jackfruitgames\" target=\"_blank\" rel=\"noreferrer\">\r\n              <img src={githubIcon} alt=\"GitHub\" className=\"Link-icon\" />\r\n            </a>\r\n          </NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import './GameCard.css'\r\nimport {\r\n  Card, CardText, CardBody, Button,\r\n  CardTitle, CardSubtitle, Col\r\n} from 'reactstrap';\r\n\r\nconst GameCard = (props) => {\r\n\r\n  return (\r\n    <Col md=\"6\">\r\n      <Card className='GameCard'>\r\n        <CardBody>\r\n          <CardTitle tag=\"h4\">{props.title}</CardTitle>\r\n          <CardSubtitle>Released: {props.releaseDate}</CardSubtitle>\r\n        </CardBody>\r\n        <a href={props.href}>\r\n          <img width=\"100%\" src={props.image} alt=\"Game Logo\" />\r\n        </a>\r\n        <CardBody>\r\n          <CardText>\r\n            {props.description}\r\n          </CardText>\r\n          <a href={props.href}>\r\n            <Button color=\"primary\">Read more</Button>\r\n          </a>\r\n          <a href={props.download} target='_blank' rel=\"noreferrer\">\r\n            <img height='60px'\r\n              alt='Get it on Google Play'\r\n              src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png' />\r\n          </a>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default GameCard;","export default __webpack_public_path__ + \"static/media/death_roll_app_icon_512.de032d35.png\";","import './Home.css'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport GameCard from './GameCard'\r\n\r\nimport deathRollLogo from '../img/death_roll_app_icon_512.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col className=\"center-text\">\r\n          <h1 className=\"Home-h1\">Who we are</h1>\r\n          <p className=\"Home-text\">\r\n            We're a small indie game development studio from Switzerland.\r\n            Our games are mostly created with open source tools like\r\n              the <a href=\"https://godotengine.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Godot Engine</a> and we publish some of our code\r\n              on <a href=\"https://github.com/jackfruitgames\" target=\"_blank\" rel=\"noreferrer\">\r\n              GitHub</a>.\r\n            </p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"center-text Home-h1\">Games</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <GameCard\r\n          href=\"/DeathRollSimulator\"\r\n          download=\"https://play.google.com/store/apps/details?id=ch.jackfruit.deathrollsimulator\"\r\n          title=\"WoW Death Roll Simulator\"\r\n          image={deathRollLogo}\r\n          releaseDate=\"05. November 2020\"\r\n          description=\"An Android app that simulates the 'Death Roll' game.\">\r\n        </GameCard>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/death_roll_banner.bcfc2db2.jpg\";","import { useEffect, useState } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport deathRollBanner from '../img/death_roll_banner.jpg';\r\nimport './MarkdownContentPage.css'\r\n\r\nconst MarkdownContentPage = (props) => {\r\n\r\n  const [markdown, setMarkdown] = useState(\"\")\r\n  useEffect(() => {\r\n    // GET request using fetch inside useEffect React hook\r\n    fetch(props.markdownFile)\r\n      .then(response => response.text())\r\n      .then(data => setMarkdown(data));\r\n\r\n    // empty dependency array means this effect will only run once\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Md\">\r\n      <header>\r\n        <img src={deathRollBanner} className=\"img-fluid Md-banner\" alt=\"Death Roll Simulator banner\" />\r\n      </header>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <ReactMarkdown\r\n              className=\"Md-content\"\r\n              // allowDangerousHtml={true}\r\n              children={markdown}>\r\n            </ReactMarkdown>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarkdownContentPage;","export default __webpack_public_path__ + \"static/media/logo.bcb36608.png\";","export default __webpack_public_path__ + \"static/media/bitcoin.de0359d6.svg\";","export default __webpack_public_path__ + \"static/media/ethereum.72c9299d.svg\";","export default __webpack_public_path__ + \"static/media/qr_bitcoin.5c9bdcf1.png\";","export default __webpack_public_path__ + \"static/media/qr_ethereum.721717fc.png\";","import { useState } from 'react';\r\nimport './Footer.css'\r\nimport logo from '../img/logo.png';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button\r\n} from 'reactstrap';\r\nimport btcIcon from '../img/bitcoin.svg';\r\nimport ethIcon from '../img/ethereum.svg';\r\nimport btcQrCode from '../img/qr_bitcoin.png';\r\nimport ethQrCode from '../img/qr_ethereum.png';\r\n\r\nconst Footer = () => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [qrImage, setQrImage] = useState(ethQrCode);\r\n  const [selectedCoin, setModalCoin] = useState('');\r\n  const [modalPublicKey, setModalPublicKey] = useState('');\r\n\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const toggleModalBtc = () => {\r\n    setModalCoin('Bitcoin');\r\n    setModalPublicKey('bc1qhg0dwydnm7a5nygnqr8e0597qg8gz8xh3qyhdh');\r\n    setQrImage(btcQrCode);\r\n    toggleModal();\r\n  }\r\n\r\n  const toggleModalEth = () => {\r\n    setModalCoin('Ethereum');\r\n    setModalPublicKey('0x323d01bF3B5ea3e82356Dbb0fB2CF65540Ae1ce8');\r\n    setQrImage(ethQrCode);\r\n    toggleModal();\r\n  }\r\n\r\n  return (\r\n    <footer>\r\n      <Container>\r\n\r\n        <Modal isOpen={modal} toggle={toggleModal}>\r\n          <ModalHeader toggle={toggleModal} className=\"Donate-modal\"><h3>{selectedCoin} Donation</h3></ModalHeader>\r\n          <ModalBody className=\"Donate-modal center-text\">\r\n            Thank you for donating to Jackfruit Games. Please use the QR\r\n              code or the {selectedCoin} address below to initiate the payment.\r\n            <img src={qrImage} alt=\"Donation QR code\" className=\"Qr-image Small-margin-top\" />\r\n            <p className=\"Small-margin-top No-margin-bottom\">Our {selectedCoin} address:</p>\r\n            <p className=\"Wrap-address\">{modalPublicKey}</p>\r\n          </ModalBody>\r\n          <ModalFooter className=\"Donate-modal\">\r\n            <Button color=\"primary\" onClick={toggleModal}>Done</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Row>\r\n          <Col xs={{ size: 8, offset: 2 }} md={{ size: 6, offset: 3 }}>\r\n            <img className=\"Footer-logo img-fluid\" src={logo} alt=\"Jackfruit Games logo\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            Like what we do? Please consider a donation:\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"center-text Small-margin-top\">\r\n            <img onClick={toggleModalBtc} src={btcIcon} alt=\"Bitcoin\" className=\"Donate-icon\" />\r\n            <img onClick={toggleModalEth} src={ethIcon} alt=\"Ethereum\" className=\"Donate-icon\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"Big-margin-top\">\r\n          <Col>\r\n            ©{(new Date()).getFullYear()} JACKFRUIT GAMES. ALL RIGHTS RESERVED.\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            All trademarks referenced herein are the properties of their respective owners.\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/DeathRollSimulator.f46d5d9e.md\";","import './App.css';\r\nimport Navigation from './components/Navigation';\r\nimport Home from './components/Home';\r\nimport MarkdownContentPage from './components/MarkdownContentPage';\r\nimport Footer from './components/Footer'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Container } from 'reactstrap'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport logo from './img/logo.png';\r\nimport deathRollMarkdown from './content/DeathRollSimulator/DeathRollSimulator.md'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n\r\n      <BrowserRouter>\r\n        <Switch>\r\n\r\n          <Route path=\"/DeathRollSimulator\">\r\n            <Container className=\"App\">\r\n              <Helmet>\r\n                <title>Jackfruit Games - WoW Death Roll Simulator</title>\r\n                <meta\r\n                  name=\"description\"\r\n                  content=\"A must have for every death roll fan! The WoW Death Roll Simulator by Jackfruit Games.\" />\r\n              </Helmet>\r\n              <MarkdownContentPage\r\n                markdownFile={deathRollMarkdown}>\r\n              </MarkdownContentPage>\r\n            </Container>\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            {/* The Router stops at the first match.\r\n                path='/' matches always! Therefore it needs to be at the end. */}\r\n            <Container>\r\n              <img src={logo} className=\"img-fluid\" alt=\"Jackfruit Games logo\" />\r\n            </Container>\r\n            <Container className=\"App\">\r\n              <Home></Home>\r\n            </Container>\r\n          </Route>\r\n\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Container className=\"App-footer\">\r\n        <Footer></Footer>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './custom.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}