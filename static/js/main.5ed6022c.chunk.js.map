{"version":3,"sources":["components/Navigation.js","components/GameCard.js","img/logo.png","img/death_roll_app_icon_512.png","components/Home.js","img/death_roll_banner.jpg","components/MarkdownContentPage.js","content/DeathRollSimulator/DeathRollSimulator.md","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","useState","isOpen","setIsOpen","Navbar","className","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","GameCard","Col","md","Card","CardBody","CardTitle","tag","title","CardSubtitle","releaseDate","width","src","image","alt","CardText","description","Button","color","download","target","rel","height","Home","logo","Container","Row","deathRollLogo","MarkdownContentPage","markdown","setMarkdown","useEffect","fetch","markdownFile","then","response","text","data","deathRollBanner","children","App","path","deathRollMarkdown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ed6022c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarToggler\r\n  } from 'reactstrap';\r\n\r\nconst Navigation = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar className=\"App-Navbar\" dark expand=\"md\">\r\n                <NavbarBrand href=\"/\">Jackfruit Games</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"/DeathRollSimulator\">WoW Death Roll Simulator</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import './GameCard.css'\r\nimport {\r\n    Card, CardText, CardBody, Button,\r\n    CardTitle, CardSubtitle, Col\r\n} from 'reactstrap';\r\n\r\nconst GameCard = (props) => {\r\n\r\n    return (\r\n        <Col md=\"6\">\r\n            <Card className='GameCard'>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h4\">{props.title}</CardTitle>\r\n                    <CardSubtitle>Released: {props.releaseDate}</CardSubtitle>\r\n                </CardBody>\r\n                <a href={props.href}>\r\n                    <img width=\"100%\" src={props.image} alt=\"Game Logo\" />\r\n                </a>\r\n                <CardBody>\r\n                    <CardText>\r\n                        {props.description}\r\n                    </CardText>\r\n                    <a href={props.href}>\r\n                        <Button color=\"primary\">Read more</Button>\r\n                    </a>\r\n                    <a href={props.download} target='_blank' rel=\"noreferrer\">\r\n                        <img height='60px'\r\n                            alt='Get it on Google Play'\r\n                            src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png' />\r\n                    </a>\r\n                </CardBody>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default GameCard;","export default __webpack_public_path__ + \"static/media/logo.bcb36608.png\";","export default __webpack_public_path__ + \"static/media/death_roll_app_icon_512.de032d35.png\";","import './Home.css'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport GameCard from './GameCard'\r\n\r\nimport logo from '../img/logo.png';\r\nimport deathRollLogo from '../img/death_roll_app_icon_512.png';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <img src={logo} className=\"img-fluid\" alt=\"Jackfruit Games logo\" />\r\n            </header>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"center-text\">\r\n                        <h1 className=\"Home-h1\">Who we are</h1>\r\n                        <p className=\"Home-text\">\r\n                            We're a small indie game development studio from Switzerland.\r\n                            Our games are mostly created with open source tools like\r\n                    the <a href=\"https://godotengine.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n                                Godot Engine\r\n                    </a> and we publish some of our code\r\n                    on <a href=\"https://github.com/jackfruitgames\" target=\"_blank\" rel=\"noreferrer\">\r\n                                GitHub\r\n                    </a>.\r\n                </p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h1 className=\"center-text Home-h1\">Games</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <GameCard\r\n                        href=\"/DeathRollSimulator\"\r\n                        download=\"https://play.google.com/store/apps/details?id=ch.jackfruit.deathrollsimulator\"\r\n                        title=\"WoW Death Roll Simulator\"\r\n                        image={deathRollLogo}\r\n                        releaseDate=\"05. November 2020\"\r\n                        description=\"An Android app that simulates the 'Death Roll' game.\">\r\n                    </GameCard>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/death_roll_banner.bcfc2db2.jpg\";","import { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ReactMarkdown from 'react-markdown'\nimport deathRollBanner from '../img/death_roll_banner.jpg';\nimport './MarkdownContentPage.css'\n\nconst MarkdownContentPage = (props) => {\n\n    const [markdown, setMarkdown] = useState(\"\")\n    useEffect(() => {\n        // GET request using fetch inside useEffect React hook\n        fetch(props.markdownFile)\n            .then(response => response.text())\n            .then(data => setMarkdown(data));\n\n    // empty dependency array means this effect will only run once\n    // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div>\n            <header>\n                <img src={deathRollBanner} className=\"img-fluid\" alt=\"Death Roll Simulator banner\" />\n            </header>\n            <Container>\n                <Row>\n                    <Col>\n                        <ReactMarkdown\n                            className=\"Md\"\n                            // allowDangerousHtml={true}\n                            children={markdown}>\n                        </ReactMarkdown>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default MarkdownContentPage;","export default __webpack_public_path__ + \"static/media/DeathRollSimulator.f46d5d9e.md\";","import './App.css';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MarkdownContentPage from './components/MarkdownContentPage';\nimport { Container } from 'reactstrap'\n\nimport deathRollMarkdown from './content/DeathRollSimulator/DeathRollSimulator.md'\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Navigation></Navigation>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/DeathRollSimulator\">\n            <MarkdownContentPage\n              markdownFile={deathRollMarkdown}>\n              </MarkdownContentPage>\n          </Route>\n          <Route path=\"/\">\n            {/* The Router stops at the first match.\n             path='/' matches always! Therefore it needs to be at the end. */}\n            <Home></Home>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}